
// Generated by Molecule 0.6.1
#define MOLECULEC_VERSION 6001
#define MOLECULE_API_VERSION_MIN 5000

#define MOLECULEC2_VERSION 6001
#define MOLECULE2_API_VERSION_MIN 5000

#include "molecule2_reader.h"

#ifndef _SAMPLE_API2_H_
#define _SAMPLE_API2_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
struct SampleDynVectorType;
struct SampleDynVectorVTable;
struct SampleDynVectorVTable *GetSampleDynVectorVTable(void);
uint32_t SampleDynVector_len_impl(struct SampleDynVectorType *);
mol2_cursor_t SampleDynVector_get_impl(struct SampleDynVectorType *, uint32_t,
                                       int *);
struct SampleStructType;
struct SampleStructVTable;
struct SampleStructVTable *GetSampleStructVTable(void);
uint32_t SampleStruct_get_u32_impl(struct SampleStructType *);
mol2_cursor_t SampleStruct_get_byte2_impl(struct SampleStructType *);
struct SampleTableType;
struct SampleTableVTable;
struct SampleTableVTable *GetSampleTableVTable(void);
struct SampleDynVectorType SampleTable_get_byte_2d_vector_impl(
    struct SampleTableType *);
mol2_cursor_t SampleTable_get_byte2_impl(struct SampleTableType *);
struct SampleUnionType;
struct SampleUnionVTable;
struct SampleUnionVTable *GetSampleUnionVTable(void);
uint32_t SampleUnion_item_id_impl(struct SampleUnionType *);
struct SampleStructType SampleUnion_as_SampleStruct_impl(
    struct SampleUnionType *);
struct SampleTableType SampleUnion_as_SampleTable_impl(
    struct SampleUnionType *);
struct SampleOptionTableType;
struct SampleOptionTableVTable;
struct SampleOptionTableVTable *GetSampleOptionTableVTable(void);
bool SampleOptionTable_is_none_impl(struct SampleOptionTableType *);
struct SampleTableType SampleOptionTable_unwrap_impl(
    struct SampleOptionTableType *);

// -------------------
typedef struct SampleDynVectorVTable {
  uint32_t (*len)(struct SampleDynVectorType *);
  mol2_cursor_t (*get)(struct SampleDynVectorType *, uint32_t, int *);
} SampleDynVectorVTable;
typedef struct SampleDynVectorType {
  mol2_cursor_t cur;
  SampleDynVectorVTable *tbl;
} SampleDynVectorType;

struct SampleDynVectorType make_SampleDynVector(mol2_cursor_t *cur) {
  SampleDynVectorType ret;
  ret.cur = *cur;
  ret.tbl = GetSampleDynVectorVTable();
  return ret;
}
struct SampleDynVectorVTable *GetSampleDynVectorVTable(void) {
  static SampleDynVectorVTable s_vtable;
  static int inited = 0;
  if (inited) return &s_vtable;
  s_vtable.len = SampleDynVector_len_impl;
  s_vtable.get = SampleDynVector_get_impl;
  return &s_vtable;
}

typedef struct SampleStructVTable {
  uint32_t (*u32)(struct SampleStructType *);
  mol2_cursor_t (*byte2)(struct SampleStructType *);
} SampleStructVTable;
typedef struct SampleStructType {
  mol2_cursor_t cur;
  SampleStructVTable *tbl;
} SampleStructType;

struct SampleStructType make_SampleStruct(mol2_cursor_t *cur) {
  SampleStructType ret;
  ret.cur = *cur;
  ret.tbl = GetSampleStructVTable();
  return ret;
}
struct SampleStructVTable *GetSampleStructVTable(void) {
  static SampleStructVTable s_vtable;
  static int inited = 0;
  if (inited) return &s_vtable;

  s_vtable.u32 = SampleStruct_get_u32_impl;
  s_vtable.byte2 = SampleStruct_get_byte2_impl;
  return &s_vtable;
}

typedef struct SampleTableVTable {
  struct SampleDynVectorType (*byte_2d_vector)(struct SampleTableType *);
  mol2_cursor_t (*byte2)(struct SampleTableType *);
} SampleTableVTable;
typedef struct SampleTableType {
  mol2_cursor_t cur;
  SampleTableVTable *tbl;
} SampleTableType;

struct SampleTableType make_SampleTable(mol2_cursor_t *cur) {
  SampleTableType ret;
  ret.cur = *cur;
  ret.tbl = GetSampleTableVTable();
  return ret;
}
struct SampleTableVTable *GetSampleTableVTable(void) {
  static SampleTableVTable s_vtable;
  static int inited = 0;
  if (inited) return &s_vtable;

  s_vtable.byte_2d_vector = SampleTable_get_byte_2d_vector_impl;
  s_vtable.byte2 = SampleTable_get_byte2_impl;
  return &s_vtable;
}

typedef struct SampleUnionVTable {
  uint32_t (*item_id)(struct SampleUnionType *);
  struct SampleStructType (*as_SampleStruct)(struct SampleUnionType *);
  struct SampleTableType (*as_SampleTable)(struct SampleUnionType *);
} SampleUnionVTable;
typedef struct SampleUnionType {
  mol2_cursor_t cur;
  SampleUnionVTable *tbl;
} SampleUnionType;

struct SampleUnionType make_SampleUnion(mol2_cursor_t *cur) {
  SampleUnionType ret;
  ret.cur = *cur;
  ret.tbl = GetSampleUnionVTable();
  return ret;
}
struct SampleUnionVTable *GetSampleUnionVTable(void) {
  static SampleUnionVTable s_vtable;
  static int inited = 0;
  if (inited) return &s_vtable;
  s_vtable.item_id = SampleUnion_item_id_impl;
  s_vtable.as_SampleStruct = SampleUnion_as_SampleStruct_impl;
  s_vtable.as_SampleTable = SampleUnion_as_SampleTable_impl;
  return &s_vtable;
}

typedef struct SampleOptionTableVTable {
  bool (*is_none)(struct SampleOptionTableType *);
  struct SampleTableType (*unwrap)(struct SampleOptionTableType *);
} SampleOptionTableVTable;
typedef struct SampleOptionTableType {
  mol2_cursor_t cur;
  SampleOptionTableVTable *tbl;
} SampleOptionTableType;

struct SampleOptionTableType make_SampleOptionTable(mol2_cursor_t *cur) {
  SampleOptionTableType ret;
  ret.cur = *cur;
  ret.tbl = GetSampleOptionTableVTable();
  return ret;
}
struct SampleOptionTableVTable *GetSampleOptionTableVTable(void) {
  static SampleOptionTableVTable s_vtable;
  static int inited = 0;
  if (inited) return &s_vtable;
  s_vtable.is_none = SampleOptionTable_is_none_impl;
  s_vtable.unwrap = SampleOptionTable_unwrap_impl;
  return &s_vtable;
}

// -------------------

uint32_t SampleDynVector_len_impl(SampleDynVectorType *this) {
  return mol2_dynvec_length(&this->cur);
}
mol2_cursor_t SampleDynVector_get_impl(SampleDynVectorType *this,
                                       uint32_t index, int *existing) {
  mol2_cursor_t ret;
  mol2_cursor_res_t res = mol2_dynvec_slice_by_index(&this->cur, index);
  if (res.errno != 0) {
    *existing = 0;
    return ret;
  } else {
    *existing = 1;
  }
  ret = convert_to_rawbytes(&res.cur);
  return ret;
}
uint32_t SampleStruct_get_u32_impl(SampleStructType *this) {
  uint32_t ret;
  mol2_cursor_t ret2 = mol2_slice_by_offset(&this->cur, 0, 4);
  ret = convert_to_Uint32(&ret2);
  return ret;
}
mol2_cursor_t SampleStruct_get_byte2_impl(SampleStructType *this) {
  mol2_cursor_t ret;
  mol2_cursor_t ret2 = mol2_slice_by_offset(&this->cur, 4, 2);
  ret = convert_to_array(&ret2);
  return ret;
}
SampleDynVectorType SampleTable_get_byte_2d_vector_impl(SampleTableType *this) {
  SampleDynVectorType ret;
  mol2_cursor_t cur = mol2_table_slice_by_index(&this->cur, 0);
  ret.cur = cur;
  ret.tbl = GetSampleDynVectorVTable();
  return ret;
}
mol2_cursor_t SampleTable_get_byte2_impl(SampleTableType *this) {
  mol2_cursor_t ret;
  mol2_cursor_t ret2 = mol2_table_slice_by_index(&this->cur, 1);
  ret = convert_to_array(&ret2);
  return ret;
}
uint32_t SampleUnion_item_id_impl(SampleUnionType *this) {
  return mol2_unpack_number(&this->cur);
}
SampleStructType SampleUnion_as_SampleStruct_impl(SampleUnionType *this) {
  SampleStructType ret;
  mol2_union_t u = mol2_union_unpack(&this->cur);
  ret.cur = u.cursor;
  ret.tbl = GetSampleStructVTable();
  return ret;
}
SampleTableType SampleUnion_as_SampleTable_impl(SampleUnionType *this) {
  SampleTableType ret;
  mol2_union_t u = mol2_union_unpack(&this->cur);
  ret.cur = u.cursor;
  ret.tbl = GetSampleTableVTable();
  return ret;
}
bool SampleOptionTable_is_none_impl(SampleOptionTableType *this) {
  return mol2_option_is_none(&this->cur);
}
SampleTableType SampleOptionTable_unwrap_impl(SampleOptionTableType *this) {
  SampleTableType ret;
  mol2_cursor_t cur = this->cur;
  ret.cur = cur;
  ret.tbl = GetSampleTableVTable();
  return ret;
}
#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _SAMPLE_API2_H_ */
